
services:
  db:
    image: postgres:16
    container_name: pg_gestao_equip
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
      TZ: America/Sao_Paulo
      PGTZ: America/Sao_Paulo
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 3s
      retries: 10
    volumes:
      - pgdata:/var/lib/postgresql/data

  pgadmin:
   image: dpage/pgadmin4
   environment:
     PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
     PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
   ports:
     - "5050:80"
   depends_on:
     db:
       condition: service_healthy

  equipment-management:
    build:
      context: .
      dockerfile: ./equipment-management.dockerfile
    container_name: equipment-management
    restart: unless-stopped
    env_file:
      - ./.env
    ports:
      - "3000:3000"
    depends_on:
     db:
       condition: service_healthy

  test:
    build:
      context: .
      dockerfile: ./equipment-management.dockerfile 
      # target: dev          # precisa ter jest/supertest (devDependencies)
    container_name: api_tests
    env_file:
      - ./.env.test.docker
    environment:
      DOTENV_CONFIG_PATH: .env.test.docker
      DB_HOST: ${DB_HOST}          # reforço
      DB_PORT: ${DB_PORT}
      NODE_ENV: test
    depends_on:
      db:
        condition: service_healthy
    command: ["npm", "test"]
    volumes:
      - .:/app             # usa o código do host
      - /app/node_modules  # mantém node_modules do container

      # cria o banco de teste automaticamente se não existir
  db-init-test:
    image: postgres:16
    depends_on:
      db:
        condition: service_healthy
    environment:
      PGPASSWORD: ${DB_PASS:-app}
      DB_USER: ${DB_USER:-app}
      DB_NAME_TEST: ${DB_NAME_TEST:-appdb_test}
    entrypoint: [ "sh", "-lc" ]
    command: >
      until pg_isready -h db -p 5432 -U "$DB_USER"; do sleep 1; done;
      psql -h db -U "$DB_USER" -d postgres -tc
      "SELECT 1 FROM pg_database WHERE datname='${DB_NAME_TEST:-appdb_test}'" | grep -q 1
      || createdb -h db -U "$DB_USER" "${DB_NAME_TEST:-appdb_test}"
    restart: "no"

volumes:
  pgdata:
  pgadmin:
